{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm transition-colors\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8EACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/metric-card.tsx"],"sourcesContent":["\"use client\"\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { cn } from \"@/lib/utils\";\nimport { Area, AreaChart, ResponsiveContainer } from \"recharts\"\nimport { motion } from 'framer-motion';\n\ninterface MetricCardProps {\n  icon: React.ReactNode;\n  title: string;\n  value: string;\n  change: string;\n  changeType: 'increase' | 'decrease';\n  trendData: { x: number, y: number }[];\n}\n\nconst itemVariants = {\n  hidden: { y: 20, opacity: 0 },\n  visible: { y: 0, opacity: 1 }\n};\n\nexport function MetricCard({ icon, title, value, change, changeType, trendData }: MetricCardProps) {\n  const isIncrease = changeType === 'increase';\n\n  return (\n    <motion.div variants={itemVariants}>\n        <Card className=\"relative overflow-hidden transition-all duration-300 hover:shadow-lg hover:shadow-primary/20 hover:-translate-y-1\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n                {icon}\n            </CardHeader>\n            <CardContent>\n                <div className=\"flex items-end justify-between\">\n                <div>\n                    <div className=\"text-2xl font-bold\">{value}</div>\n                    <p className={cn(\n                    \"text-xs text-muted-foreground\",\n                    isIncrease ? 'text-green-500' : 'text-red-500'\n                    )}>\n                    {change} from last hour\n                    </p>\n                </div>\n                <div className=\"h-12 w-24\">\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <AreaChart \n                        data={trendData}\n                        margin={{ top: 5, right: 0, left: 0, bottom: 0 }}\n                    >\n                        <defs>\n                            <linearGradient id={isIncrease ? \"colorIncrease\" : \"colorDecrease\"} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor={isIncrease ? \"hsl(var(--primary))\" : \"hsl(var(--destructive))\"} stopOpacity={0.4}/>\n                            <stop offset=\"95%\" stopColor={isIncrease ? \"hsl(var(--primary))\" : \"hsl(var(--destructive))\"} stopOpacity={0}/>\n                            </linearGradient>\n                        </defs>\n                        <Area \n                            type=\"monotone\" \n                            dataKey=\"y\" \n                            stroke={isIncrease ? \"hsl(var(--primary))\" : \"hsl(var(--destructive))\"}\n                            strokeWidth={2}\n                            fillOpacity={1} \n                            fill={`url(#${isIncrease ? 'colorIncrease' : 'colorDecrease'})`}\n                        />\n                    </AreaChart>\n                    </ResponsiveContainer>\n                </div>\n                </div>\n            </CardContent>\n        </Card>\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AALA;;;;;;AAgBA,MAAM,eAAe;IACnB,QAAQ;QAAE,GAAG;QAAI,SAAS;IAAE;IAC5B,SAAS;QAAE,GAAG;QAAG,SAAS;IAAE;AAC9B;AAEO,SAAS,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAmB;IAC/F,MAAM,aAAa,eAAe;IAElC,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;QAAC,UAAU;kBAClB,cAAA,6LAAC,mIAAA,CAAA,OAAI;YAAC,WAAU;;8BACZ,6LAAC,mIAAA,CAAA,aAAU;oBAAC,WAAU;;sCAClB,6LAAC,mIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAuB;;;;;;wBAC3C;;;;;;;8BAEL,6LAAC,mIAAA,CAAA,cAAW;8BACR,cAAA,6LAAC;wBAAI,WAAU;;0CACf,6LAAC;;kDACG,6LAAC;wCAAI,WAAU;kDAAsB;;;;;;kDACrC,6LAAC;wCAAE,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACf,iCACA,aAAa,mBAAmB;;4CAE/B;4CAAO;;;;;;;;;;;;;0CAGZ,6LAAC;gCAAI,WAAU;0CACX,cAAA,6LAAC,sKAAA,CAAA,sBAAmB;oCAAC,OAAM;oCAAO,QAAO;8CACzC,cAAA,6LAAC,wJAAA,CAAA,YAAS;wCACN,MAAM;wCACN,QAAQ;4CAAE,KAAK;4CAAG,OAAO;4CAAG,MAAM;4CAAG,QAAQ;wCAAE;;0DAE/C,6LAAC;0DACG,cAAA,6LAAC;oDAAe,IAAI,aAAa,kBAAkB;oDAAiB,IAAG;oDAAI,IAAG;oDAAI,IAAG;oDAAI,IAAG;;sEAC5F,6LAAC;4DAAK,QAAO;4DAAK,WAAW,aAAa,wBAAwB;4DAA2B,aAAa;;;;;;sEAC1G,6LAAC;4DAAK,QAAO;4DAAM,WAAW,aAAa,wBAAwB;4DAA2B,aAAa;;;;;;;;;;;;;;;;;0DAG/G,6LAAC,uJAAA,CAAA,OAAI;gDACD,MAAK;gDACL,SAAQ;gDACR,QAAQ,aAAa,wBAAwB;gDAC7C,aAAa;gDACb,aAAa;gDACb,MAAM,CAAC,KAAK,EAAE,aAAa,kBAAkB,gBAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU3F;KAjDgB","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/data-chart.tsx"],"sourcesContent":["\"use client\"\n\nimport { AreaChart, Area, CartesianGrid, XAxis, YAxis, Tooltip } from \"recharts\"\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartConfig,\n  ChartLegend,\n  ChartLegendContent,\n} from \"@/components/ui/chart\"\n\nconst chartConfig = {\n  temperature: {\n    label: \"Temperature (°C)\",\n    color: \"hsl(var(--chart-1))\",\n  },\n  humidity: {\n    label: \"Humidity (%)\",\n    color: \"hsl(var(--chart-3))\",\n  },\n  light: {\n    label: \"Light (klx)\",\n    color: \"hsl(var(--chart-2))\",\n  },\n} satisfies ChartConfig;\n\ntype ChartData = {\n    day: string;\n    temperature: number;\n    humidity: number;\n    light: number;\n};\n\ninterface DataChartProps {\n    data: ChartData[];\n}\n\nexport function DataChart({ data }: DataChartProps) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"font-headline\">Monthly Overview</CardTitle>\n        <CardDescription>Key environmental metrics for the last 30 days</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig} className=\"h-72 w-full\">\n            <AreaChart accessibilityLayer data={data} margin={{ left: 12, right: 12 }}>\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n                <XAxis\n                    dataKey=\"day\"\n                    tickLine={false}\n                    tickMargin={10}\n                    axisLine={false}\n                    interval={4}\n                />\n                 <YAxis\n                    tickLine={false}\n                    axisLine={false}\n                    tickMargin={10}\n                    domain={['dataMin - 5', 'dataMax + 5']}\n                 />\n                <ChartTooltip\n                    cursor={true}\n                    content={<ChartTooltipContent indicator=\"dot\" />}\n                />\n                <ChartLegend content={<ChartLegendContent />} />\n                <defs>\n                    <linearGradient id=\"fillTemperature\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"var(--color-temperature)\" stopOpacity={0.8} />\n                        <stop offset=\"95%\" stopColor=\"var(--color-temperature)\" stopOpacity={0.1} />\n                    </linearGradient>\n                    <linearGradient id=\"fillHumidity\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"var(--color-humidity)\" stopOpacity={0.8} />\n                        <stop offset=\"95%\" stopColor=\"var(--color-humidity)\" stopOpacity={0.1} />\n                    </linearGradient>\n                     <linearGradient id=\"fillLight\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"var(--color-light)\" stopOpacity={0.8} />\n                        <stop offset=\"95%\" stopColor=\"var(--color-light)\" stopOpacity={0.1} />\n                    </linearGradient>\n                </defs>\n                <Area dataKey=\"temperature\" type=\"natural\" fill=\"url(#fillTemperature)\" fillOpacity={0.4} stroke=\"var(--color-temperature)\" strokeWidth={2} />\n                <Area dataKey=\"humidity\" type=\"natural\" fill=\"url(#fillHumidity)\" fillOpacity={0.4} stroke=\"var(--color-humidity)\" strokeWidth={2} />\n                <Area dataKey=\"light\" type=\"natural\" fill=\"url(#fillLight)\" fillOpacity={0.4} stroke=\"var(--color-light)\" strokeWidth={2} />\n            </AreaChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAOA;AAXA;;;;;AAoBA,MAAM,cAAc;IAClB,aAAa;QACX,OAAO;QACP,OAAO;IACT;IACA,UAAU;QACR,OAAO;QACP,OAAO;IACT;IACA,OAAO;QACL,OAAO;QACP,OAAO;IACT;AACF;AAaO,SAAS,UAAU,EAAE,IAAI,EAAkB;IAChD,qBACE,6LAAC,mIAAA,CAAA,OAAI;;0BACH,6LAAC,mIAAA,CAAA,aAAU;;kCACT,6LAAC,mIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAgB;;;;;;kCACrC,6LAAC,mIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,6LAAC,mIAAA,CAAA,cAAW;0BACV,cAAA,6LAAC,oIAAA,CAAA,iBAAc;oBAAC,QAAQ;oBAAa,WAAU;8BAC3C,cAAA,6LAAC,wJAAA,CAAA,YAAS;wBAAC,kBAAkB;wBAAC,MAAM;wBAAM,QAAQ;4BAAE,MAAM;4BAAI,OAAO;wBAAG;;0CACpE,6LAAC,gKAAA,CAAA,gBAAa;gCAAC,UAAU;gCAAO,iBAAgB;;;;;;0CAChD,6LAAC,wJAAA,CAAA,QAAK;gCACF,SAAQ;gCACR,UAAU;gCACV,YAAY;gCACZ,UAAU;gCACV,UAAU;;;;;;0CAEb,6LAAC,wJAAA,CAAA,QAAK;gCACH,UAAU;gCACV,UAAU;gCACV,YAAY;gCACZ,QAAQ;oCAAC;oCAAe;iCAAc;;;;;;0CAE1C,6LAAC,oIAAA,CAAA,eAAY;gCACT,QAAQ;gCACR,uBAAS,6LAAC,oIAAA,CAAA,sBAAmB;oCAAC,WAAU;;;;;;;;;;;0CAE5C,6LAAC,oIAAA,CAAA,cAAW;gCAAC,uBAAS,6LAAC,oIAAA,CAAA,qBAAkB;;;;;;;;;;0CACzC,6LAAC;;kDACG,6LAAC;wCAAe,IAAG;wCAAkB,IAAG;wCAAI,IAAG;wCAAI,IAAG;wCAAI,IAAG;;0DACzD,6LAAC;gDAAK,QAAO;gDAAK,WAAU;gDAA2B,aAAa;;;;;;0DACpE,6LAAC;gDAAK,QAAO;gDAAM,WAAU;gDAA2B,aAAa;;;;;;;;;;;;kDAEzE,6LAAC;wCAAe,IAAG;wCAAe,IAAG;wCAAI,IAAG;wCAAI,IAAG;wCAAI,IAAG;;0DACtD,6LAAC;gDAAK,QAAO;gDAAK,WAAU;gDAAwB,aAAa;;;;;;0DACjE,6LAAC;gDAAK,QAAO;gDAAM,WAAU;gDAAwB,aAAa;;;;;;;;;;;;kDAErE,6LAAC;wCAAe,IAAG;wCAAY,IAAG;wCAAI,IAAG;wCAAI,IAAG;wCAAI,IAAG;;0DACpD,6LAAC;gDAAK,QAAO;gDAAK,WAAU;gDAAqB,aAAa;;;;;;0DAC9D,6LAAC;gDAAK,QAAO;gDAAM,WAAU;gDAAqB,aAAa;;;;;;;;;;;;;;;;;;0CAGvE,6LAAC,uJAAA,CAAA,OAAI;gCAAC,SAAQ;gCAAc,MAAK;gCAAU,MAAK;gCAAwB,aAAa;gCAAK,QAAO;gCAA2B,aAAa;;;;;;0CACzI,6LAAC,uJAAA,CAAA,OAAI;gCAAC,SAAQ;gCAAW,MAAK;gCAAU,MAAK;gCAAqB,aAAa;gCAAK,QAAO;gCAAwB,aAAa;;;;;;0CAChI,6LAAC,uJAAA,CAAA,OAAI;gCAAC,SAAQ;gCAAQ,MAAK;gCAAU,MAAK;gCAAkB,aAAa;gCAAK,QAAO;gCAAqB,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMvI;KAnDgB","debugId":null}},
    {"offset": {"line": 938, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 977, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1195, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/lib/schemas.ts"],"sourcesContent":["\nimport { z } from \"zod\";\n\nexport const LoginSchema = z.object({\n  email: z.string().email({ message: \"Please enter a valid email.\" }),\n  password: z.string().min(1, { message: \"Password is required.\" }),\n});\n\nexport const RegisterSchema = z.object({\n  name: z.string().min(2, { message: \"Name must be at least 2 characters.\" }),\n  email: z.string().email({ message: \"Please enter a valid email.\" }),\n  password: z.string().min(6, { message: \"Password must be at least 6 characters.\" }),\n  confirmPassword: z.string(),\n}).refine(data => data.password === data.confirmPassword, {\n  message: \"Passwords do not match.\",\n  path: [\"confirmPassword\"],\n});\n\nexport const AddressSchema = z.object({\n    addressLine1: z.string().min(1, { message: \"Address is required.\" }),\n    city: z.string().min(1, { message: \"City is required.\" }),\n    state: z.string().min(1, { message: \"Please select a state.\" }),\n    pincode: z.string().length(6, { message: \"Pincode must be 6 digits.\" }),\n    experience: z.string().min(1, { message: \"Please select your experience level.\" }),\n    farmType: z.string().min(1, { message: \"Please select your farm type.\" }),\n});\n\nexport const AiOptimizerSchema = z.object({\n  cropType: z.string().min(1, { message: \"Crop type is required.\" }),\n  temperature: z.coerce.number().min(-50).max(100, \"Invalid temperature\"),\n  humidity: z.coerce.number().min(0).max(100, \"Invalid humidity\"),\n  lightLevel: z.coerce.number().min(0, \"Invalid light level\"),\n});\n\nexport const CropRecommendationSchema = z.object({\n    city: z.string(),\n    state: z.string(),\n    excludeCrops: z.array(z.string()).optional(),\n    forceCropName: z.string().optional(),\n});\n\nexport const CityClimateSchema = z.object({\n    city: z.string(),\n    state: z.string(),\n});\n\nexport const GenerateAlertsInputSchema = z.object({\n  city: z.string(),\n  state: z.string(),\n  cropName: z.string(),\n  farmType: z.string(),\n});\n\nexport const FertilizerRecommenderSchema = z.object({\n    temperature: z.coerce.number().min(-50).max(100, \"Invalid temperature\"),\n    humidity: z.coerce.number().min(0).max(100, \"Invalid humidity\"),\n    moisture: z.coerce.number().min(0).max(100, \"Invalid moisture\"),\n    soilType: z.string().min(1, \"Please select a soil type\"),\n    cropType: z.string().min(1, \"Crop type is required\"),\n    nitrogen: z.coerce.number().min(0),\n    phosphorous: z.coerce.number().min(0),\n    potassium: z.coerce.number().min(0),\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1299, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { optimizeCropYield, type OptimizeCropYieldOutput } from '@/ai/flows/optimize-crop-yield';\nimport { recommendCrop, type RecommendCropOutput } from '@/ai/flows/recommend-crop-flow';\nimport { getCityClimate as getCityClimateFlow, type GetCityClimateOutput } from '@/ai/flows/get-city-climate-flow';\nimport { generateAlerts as generateAlertsFlow, type GenerateAlertsOutput } from '@/ai/flows/generate-alerts-flow';\nimport { recommendFertilizer, type RecommendFertilizerOutput } from '@/ai/flows/recommend-fertilizer-flow';\nimport { AiOptimizerSchema, CropRecommendationSchema, CityClimateSchema, GenerateAlertsInputSchema, FertilizerRecommenderSchema } from './schemas';\n\nexport async function getAiOptimization(\n    formData: unknown\n): Promise<{ data?: OptimizeCropYieldOutput; error?: string }> {\n  const validatedFields = AiOptimizerSchema.safeParse(formData);\n\n  if (!validatedFields.success) {\n    console.log(validatedFields.error.flatten().fieldErrors);\n    return { error: 'Invalid input.' };\n  }\n\n  try {\n    const result = await optimizeCropYield(validatedFields.data);\n    return { data: result };\n  } catch (e) {\n    console.error(e);\n    const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n    return { error: `Failed to get optimization suggestions: ${errorMessage}` };\n  }\n}\n\nexport async function getRecommendedCrop(\n    locationData: unknown\n): Promise<{ data?: RecommendCropOutput; error?: string }> {\n    const validatedFields = CropRecommendationSchema.safeParse(locationData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid location data.' };\n    }\n\n    try {\n        const result = await recommendCrop(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get crop recommendation: ${errorMessage}` };\n    }\n}\n\nexport async function getCityClimate(\n    locationData: unknown\n): Promise<{ data?: GetCityClimateOutput; error?: string }> {\n    const validatedFields = CityClimateSchema.safeParse(locationData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid location data.' };\n    }\n\n    try {\n        const result = await getCityClimateFlow(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get city climate: ${errorMessage}` };\n    }\n}\n\nexport async function getGeneratedAlerts(\n    inputData: unknown\n): Promise<{ data?: GenerateAlertsOutput; error?: string }> {\n    const validatedFields = GenerateAlertsInputSchema.safeParse(inputData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid input data.' };\n    }\n\n    try {\n        const result = await generateAlertsFlow(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to generate alerts: ${errorMessage}` };\n    }\n}\n\nexport async function getFertilizerRecommendation(\n    formData: unknown\n): Promise<{ data?: RecommendFertilizerOutput; error?: string }> {\n    const validatedFields = FertilizerRecommenderSchema.safeParse(formData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid input.' };\n    }\n\n    try {\n        const result = await recommendFertilizer(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get fertilizer recommendation: ${errorMessage}` };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAUsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1315, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1392, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/ai-optimizer.tsx"],"sourcesContent":["\"use client\";\n\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport { useEffect, useState } from \"react\";\nimport { Wand2, Loader2, Lightbulb, Bot, Check, X } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { AiOptimizerSchema } from \"@/lib/schemas\";\nimport { getAiOptimization } from \"@/lib/actions\";\nimport type { OptimizeCropYieldOutput } from \"@/ai/flows/optimize-crop-yield\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface AiOptimizerProps {\n  cropType?: string;\n  temperature?: number;\n  humidity?: number;\n  lightLevel?: number;\n}\n\nexport function AiOptimizer({ cropType, temperature, humidity, lightLevel }: AiOptimizerProps) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [result, setResult] = useState<OptimizeCropYieldOutput | null>(null);\n  const { toast } = useToast();\n\n  const form = useForm<z.infer<typeof AiOptimizerSchema>>({\n    resolver: zodResolver(AiOptimizerSchema),\n    defaultValues: {\n      cropType: \"\",\n      temperature: 0,\n      humidity: 0,\n      lightLevel: 0,\n    },\n  });\n\n  useEffect(() => {\n    const { dirtyFields } = form.formState;\n\n    // Only update cropType from prop if the user hasn't manually edited it.\n    if (cropType && !dirtyFields.cropType) {\n      form.setValue('cropType', cropType);\n    }\n    \n    // Always update live metrics from props.\n    if (temperature) {\n        form.setValue('temperature', parseFloat(temperature.toFixed(1)));\n    }\n    if (humidity) {\n        form.setValue('humidity', Math.round(humidity));\n    }\n    if (lightLevel) {\n        form.setValue('lightLevel', Math.round(lightLevel));\n    }\n    \n  }, [cropType, temperature, humidity, lightLevel, form]);\n\n\n  async function onSubmit(values: z.infer<typeof AiOptimizerSchema>) {\n    setIsLoading(true);\n    setResult(null);\n    const response = await getAiOptimization(values);\n    \n    if (response.data) {\n      setResult(response.data);\n      localStorage.setItem('lastValidOptimization', JSON.stringify(response.data));\n    } else {\n      const cachedDataRaw = localStorage.getItem('lastValidOptimization');\n      if (cachedDataRaw) {\n        const cachedData = JSON.parse(cachedDataRaw);\n        setResult(cachedData);\n      }\n    }\n    setIsLoading(false);\n  }\n  \n  const handleRecommendationAction = (action: 'Accepted' | 'Rejected') => {\n    toast({\n        title: `Recommendation ${action}`,\n        description: `The AI's suggestion has been marked as ${action.toLowerCase()}.`,\n    });\n    setResult(null);\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"font-headline flex items-center gap-2\">\n            <Wand2 className=\"h-6 w-6 text-primary\" />\n            <span>AI-Powered Optimization</span>\n        </CardTitle>\n        <CardDescription>\n          Enter your current farm data to get AI-powered recommendations for optimizing crop yield.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"cropType\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Crop Type</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"e.g., Lettuce\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"temperature\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Temperature (°C)</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" step=\"0.1\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"humidity\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Humidity (%)</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"lightLevel\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Light Level (Lux)</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n            <Button type=\"submit\" disabled={isLoading} className=\"bg-primary/90 hover:bg-primary\">\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Optimizing...\n                </>\n              ) : (\n                \"Get Recommendations\"\n              )}\n            </Button>\n          </form>\n        </Form>\n        \n        <div className=\"mt-6\">\n          <Alert className=\"border-primary/50 bg-primary/10 min-h-[220px] flex flex-col\">\n              <Bot className=\"h-4 w-4 text-primary\" />\n              <AlertTitle className=\"font-headline flex items-center justify-between text-primary\">\n                  <span>AI Recommendation</span>\n              </AlertTitle>\n              <AlertDescription className=\"flex-grow flex flex-col\">\n                 {result ? (\n                    <>\n                        <p className=\"font-semibold mt-4 mb-2 text-foreground\">Summary:</p>\n                        <p className=\"mb-4 text-muted-foreground\">{result.summary}</p>\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                            <Card className=\"p-4 bg-card/80\">\n                                <p className=\"text-sm font-medium text-muted-foreground\">Temperature</p>\n                                <p className=\"font-semibold text-foreground\">{result.temperatureAdjustment}</p>\n                            </Card>\n                            <Card className=\"p-4 bg-card/80\">\n                                <p className=\"text-sm font-medium text-muted-foreground\">Humidity</p>\n                                <p className=\"font-semibold text-foreground\">{result.humidityAdjustment}</p>\n                            </Card>\n                            <Card className=\"p-4 bg-card/80\">\n                                <p className=\"text-sm font-medium text-muted-foreground\">Light Level</p>\n                                <p className=\"font-semibold text-foreground\">{result.lightLevelAdjustment}</p>\n                            </Card>\n                        </div>\n                        <div className=\"flex gap-2 justify-end mt-auto\">\n                            <Button variant=\"outline\" size=\"sm\" onClick={() => handleRecommendationAction('Rejected')}>\n                                <X className=\"mr-2 h-4 w-4\" /> Reject\n                            </Button>\n                            <Button size=\"sm\" onClick={() => handleRecommendationAction('Accepted')} className=\"bg-green-600 hover:bg-green-700 text-white\">\n                                <Check className=\"mr-2 h-4 w-4\" /> Accept\n                            </Button>\n                        </div>\n                    </>\n                 ) : (\n                    <div className=\"flex items-center justify-center flex-grow\">\n                      <p className=\"text-muted-foreground\">Your AI optimization suggestions will appear here.</p>\n                    </div>\n                 )}\n              </AlertDescription>\n          </Alert>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1987, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 2035, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/alerts-preview.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n  CardFooter\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { AlertTriangle, Thermometer, Droplets } from \"lucide-react\";\nimport { Badge } from \"./ui/badge\";\n\ntype Alert = {\n  icon: JSX.Element;\n  title: string;\n  description: string;\n  time: string;\n  severity: \"High\" | \"Medium\" | \"Low\";\n};\n\ninterface AlertsPreviewProps {\n    alerts: Alert[];\n}\n\nexport function AlertsPreview({ alerts }: AlertsPreviewProps) {\n  if (!alerts || alerts.length === 0) {\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle className=\"font-headline flex items-center gap-2\">\n                    <AlertTriangle className=\"h-6 w-6 text-destructive\" />\n                    <span>Recent Alerts</span>\n                </CardTitle>\n                <CardDescription>Immediate issues that may require your attention.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <p className=\"text-sm text-muted-foreground\">No recent alerts.</p>\n            </CardContent>\n             <CardFooter>\n                <Button asChild variant=\"outline\" className=\"w-full\">\n                    <Link href=\"/dashboard/alerts\">View All Alerts</Link>\n                </Button>\n            </CardFooter>\n        </Card>\n    )\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"font-headline flex items-center gap-2\">\n            <AlertTriangle className=\"h-6 w-6 text-destructive\" />\n            <span>Recent Alerts</span>\n        </CardTitle>\n        <CardDescription>Immediate issues that may require your attention.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {alerts.map((alert, index) => (\n          <div key={index} className=\"flex items-start gap-4\">\n            <div className=\"flex-shrink-0 text-muted-foreground\">{alert.icon}</div>\n            <div className=\"flex-1\">\n              <div className=\"flex items-center justify-between\">\n                <p className=\"font-semibold\">{alert.title}</p>\n                <Badge variant={alert.severity === 'High' ? 'destructive' : alert.severity === 'Medium' ? 'secondary' : 'outline'}>{alert.severity}</Badge>\n              </div>\n              <p className=\"text-sm text-muted-foreground\">{alert.description}</p>\n              <p className=\"text-xs text-muted-foreground pt-1\">{alert.time}</p>\n            </div>\n          </div>\n        ))}\n      </CardContent>\n      <CardFooter>\n        <Button asChild variant=\"outline\" className=\"w-full\">\n            <Link href=\"/dashboard/alerts\">View All Alerts</Link>\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAQA;AACA;AACA;;;;;;;AAcO,SAAS,cAAc,EAAE,MAAM,EAAsB;IAC1D,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,GAAG;QAClC,qBACI,6LAAC,mIAAA,CAAA,OAAI;;8BACD,6LAAC,mIAAA,CAAA,aAAU;;sCACP,6LAAC,mIAAA,CAAA,YAAS;4BAAC,WAAU;;8CACjB,6LAAC,2NAAA,CAAA,gBAAa;oCAAC,WAAU;;;;;;8CACzB,6LAAC;8CAAK;;;;;;;;;;;;sCAEV,6LAAC,mIAAA,CAAA,kBAAe;sCAAC;;;;;;;;;;;;8BAErB,6LAAC,mIAAA,CAAA,cAAW;8BACR,cAAA,6LAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;8BAEhD,6LAAC,mIAAA,CAAA,aAAU;8BACR,cAAA,6LAAC,qIAAA,CAAA,SAAM;wBAAC,OAAO;wBAAC,SAAQ;wBAAU,WAAU;kCACxC,cAAA,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;sCAAoB;;;;;;;;;;;;;;;;;;;;;;IAKjD;IAEA,qBACE,6LAAC,mIAAA,CAAA,OAAI;;0BACH,6LAAC,mIAAA,CAAA,aAAU;;kCACT,6LAAC,mIAAA,CAAA,YAAS;wBAAC,WAAU;;0CACjB,6LAAC,2NAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;0CACzB,6LAAC;0CAAK;;;;;;;;;;;;kCAEV,6LAAC,mIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;0BACpB,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,6LAAC;wBAAgB,WAAU;;0CACzB,6LAAC;gCAAI,WAAU;0CAAuC,MAAM,IAAI;;;;;;0CAChE,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAE,WAAU;0DAAiB,MAAM,KAAK;;;;;;0DACzC,6LAAC,oIAAA,CAAA,QAAK;gDAAC,SAAS,MAAM,QAAQ,KAAK,SAAS,gBAAgB,MAAM,QAAQ,KAAK,WAAW,cAAc;0DAAY,MAAM,QAAQ;;;;;;;;;;;;kDAEpI,6LAAC;wCAAE,WAAU;kDAAiC,MAAM,WAAW;;;;;;kDAC/D,6LAAC;wCAAE,WAAU;kDAAsC,MAAM,IAAI;;;;;;;;;;;;;uBARvD;;;;;;;;;;0BAad,6LAAC,mIAAA,CAAA,aAAU;0BACT,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBAAC,OAAO;oBAAC,SAAQ;oBAAU,WAAU;8BACxC,cAAA,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;kCAAoB;;;;;;;;;;;;;;;;;;;;;;AAK3C;KAtDgB","debugId":null}},
    {"offset": {"line": 2292, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,qKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,qCAAuB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG1C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,iBAA8B;QAC7B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,mNAAA,CAAA,YAAS;YAAC,WAAU;;;;;;;;;;;MAZnB;AAeN,qBAAqB,WAAW,GAAG,qKAAA,CAAA,iBAA8B,CAAC,WAAW;AAE7E,MAAM,uCAAyB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,mBAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;;;;;;MAZrB;AAeN,uBAAuB,WAAW,GAChC,qKAAA,CAAA,mBAAgC,CAAC,WAAW;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,6LAAC,qKAAA,CAAA,SAAsB;kBACrB,cAAA,6LAAC,qKAAA,CAAA,UAAuB;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,6LAAC;;;;;8BACD,6LAAC,qKAAA,CAAA,WAAwB;oBACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,6LAAC;;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,qKAAA,CAAA,gBAA6B;8BAC5B,cAAA,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,6LAAC,qKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,YAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG,qKAAA,CAAA,YAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2507, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2542, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { optimizeCropYield, type OptimizeCropYieldOutput } from '@/ai/flows/optimize-crop-yield';\nimport { recommendCrop, type RecommendCropOutput } from '@/ai/flows/recommend-crop-flow';\nimport { getCityClimate as getCityClimateFlow, type GetCityClimateOutput } from '@/ai/flows/get-city-climate-flow';\nimport { generateAlerts as generateAlertsFlow, type GenerateAlertsOutput } from '@/ai/flows/generate-alerts-flow';\nimport { recommendFertilizer, type RecommendFertilizerOutput } from '@/ai/flows/recommend-fertilizer-flow';\nimport { AiOptimizerSchema, CropRecommendationSchema, CityClimateSchema, GenerateAlertsInputSchema, FertilizerRecommenderSchema } from './schemas';\n\nexport async function getAiOptimization(\n    formData: unknown\n): Promise<{ data?: OptimizeCropYieldOutput; error?: string }> {\n  const validatedFields = AiOptimizerSchema.safeParse(formData);\n\n  if (!validatedFields.success) {\n    console.log(validatedFields.error.flatten().fieldErrors);\n    return { error: 'Invalid input.' };\n  }\n\n  try {\n    const result = await optimizeCropYield(validatedFields.data);\n    return { data: result };\n  } catch (e) {\n    console.error(e);\n    const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n    return { error: `Failed to get optimization suggestions: ${errorMessage}` };\n  }\n}\n\nexport async function getRecommendedCrop(\n    locationData: unknown\n): Promise<{ data?: RecommendCropOutput; error?: string }> {\n    const validatedFields = CropRecommendationSchema.safeParse(locationData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid location data.' };\n    }\n\n    try {\n        const result = await recommendCrop(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get crop recommendation: ${errorMessage}` };\n    }\n}\n\nexport async function getCityClimate(\n    locationData: unknown\n): Promise<{ data?: GetCityClimateOutput; error?: string }> {\n    const validatedFields = CityClimateSchema.safeParse(locationData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid location data.' };\n    }\n\n    try {\n        const result = await getCityClimateFlow(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get city climate: ${errorMessage}` };\n    }\n}\n\nexport async function getGeneratedAlerts(\n    inputData: unknown\n): Promise<{ data?: GenerateAlertsOutput; error?: string }> {\n    const validatedFields = GenerateAlertsInputSchema.safeParse(inputData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid input data.' };\n    }\n\n    try {\n        const result = await generateAlertsFlow(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to generate alerts: ${errorMessage}` };\n    }\n}\n\nexport async function getFertilizerRecommendation(\n    formData: unknown\n): Promise<{ data?: RecommendFertilizerOutput; error?: string }> {\n    const validatedFields = FertilizerRecommenderSchema.safeParse(formData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid input.' };\n    }\n\n    try {\n        const result = await recommendFertilizer(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get fertilizer recommendation: ${errorMessage}` };\n    }\n}\n"],"names":[],"mappings":";;;;;;IA8BsB,qBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 2558, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/crop-recommender.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { Lightbulb, Loader2, MapPin, RefreshCw, Edit, Save, X } from \"lucide-react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport type { RecommendCropOutput } from \"@/ai/flows/recommend-crop-flow\";\nimport { Textarea } from \"./ui/textarea\";\nimport { getRecommendedCrop } from \"@/lib/actions\";\n\ninterface CropRecommenderProps {\n  recommendation: RecommendCropOutput | null;\n  onSaveRecommendation: (newRecommendation: RecommendCropOutput) => void;\n  farmInfo: { city: string; state: string; } | null;\n  isLoading: boolean;\n  error: string | null;\n  onFetchRecommendation: () => void;\n}\n\nexport function CropRecommender({ recommendation, onSaveRecommendation, farmInfo, isLoading, error, onFetchRecommendation }: CropRecommenderProps) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedData, setEditedData] = useState<RecommendCropOutput | null>(recommendation);\n  const [isReasoningLoading, setIsReasoningLoading] = useState(false);\n  const originalRecommendationOnEdit = useRef<RecommendCropOutput | null>(null);\n\n  // Debounce effect for fetching new reasoning\n  useEffect(() => {\n    if (!isEditing || !editedData || !farmInfo || editedData.cropName === originalRecommendationOnEdit.current?.cropName) {\n      return;\n    }\n    \n    if (!editedData.cropName.trim()) {\n        return;\n    }\n\n    const handler = setTimeout(() => {\n      const fetchNewReasoning = async () => {\n        setIsReasoningLoading(true);\n        const response = await getRecommendedCrop({\n            ...farmInfo,\n            forceCropName: editedData.cropName,\n        });\n        \n        if (response.data) {\n            setEditedData(prev => ({\n                ...(prev!),\n                reason: response.data.reason,\n                predictedFarmType: response.data.predictedFarmType,\n            }));\n            originalRecommendationOnEdit.current = response.data;\n        } else {\n            console.error(\"Failed to update reasoning:\", response.error);\n        }\n        \n        setIsReasoningLoading(false);\n      }\n      fetchNewReasoning();\n    }, 750);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [editedData?.cropName, farmInfo, isEditing]);\n\n  // Sync local state with prop change, but only when not in edit mode.\n  useEffect(() => {\n    if (!isEditing) {\n      setEditedData(recommendation);\n    }\n  }, [recommendation, isEditing]);\n  \n  const handleEdit = () => {\n    originalRecommendationOnEdit.current = recommendation;\n    setIsEditing(true);\n  }\n\n  const handleSave = () => {\n    if (editedData) {\n      onSaveRecommendation(editedData);\n      setIsEditing(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setEditedData(recommendation);\n    setIsEditing(false);\n  };\n\n  const renderContent = () => {\n    if (isLoading) {\n      return (\n        <div className=\"flex items-center justify-center h-48\">\n          <Loader2 className=\"h-6 w-6 animate-spin text-muted-foreground\" />\n          <p className=\"ml-2 text-muted-foreground\">Finding the perfect crop...</p>\n        </div>\n      );\n    }\n\n    if (error) {\n        return null;\n    }\n\n    if (isEditing && editedData) {\n      return (\n        <div className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"cropName\">Recommended Crop</Label>\n            <div className=\"relative\">\n                <Input\n                    id=\"cropName\"\n                    value={editedData.cropName}\n                    onChange={(e) => setEditedData({ ...editedData, cropName: e.target.value })}\n                />\n                {isReasoningLoading && (\n                    <Loader2 className=\"absolute right-2.5 top-1/2 -translate-y-1/2 h-4 w-4 animate-spin text-muted-foreground\" />\n                )}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n                The reasoning will automatically update as you type.\n            </p>\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"farmType\">Predicted Farm Type</Label>\n            <Select\n              value={editedData.predictedFarmType}\n              onValueChange={(value) => setEditedData({ ...editedData, predictedFarmType: value })}\n              disabled={isReasoningLoading}\n            >\n              <SelectTrigger id=\"farmType\">\n                <SelectValue placeholder=\"Select farm type\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"Hydroponics\">Hydroponics</SelectItem>\n                <SelectItem value=\"Aeroponics\">Aeroponics</SelectItem>\n                <SelectItem value=\"Aquaponics\">Aquaponics</SelectItem>\n                <SelectItem value=\"Traditional Vertical\">Traditional Vertical</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          <div className=\"space-y-2 relative\">\n            <Label htmlFor=\"reasoning\">Reasoning</Label>\n            <Textarea\n              id=\"reasoning\"\n              value={editedData.reason}\n              onChange={(e) => setEditedData({ ...editedData, reason: e.target.value })}\n              className=\"min-h-[120px]\"\n              disabled={isReasoningLoading}\n            />\n            {isReasoningLoading && (\n                <div className=\"absolute inset-0 bg-background/80 flex items-center justify-center rounded-md\">\n                    <Loader2 className=\"h-5 w-5 animate-spin\" />\n                </div>\n            )}\n          </div>\n          <div className=\"flex justify-end gap-2 pt-2\">\n            <Button variant=\"ghost\" size=\"sm\" onClick={handleCancel}>\n              <X className=\"mr-2 h-4 w-4\" /> Cancel\n            </Button>\n            <Button size=\"sm\" onClick={handleSave} disabled={isReasoningLoading}>\n              <Save className=\"mr-2 h-4 w-4\" /> Save Changes\n            </Button>\n          </div>\n        </div>\n      );\n    }\n\n    if (recommendation) {\n      return (\n        <div className=\"space-y-4\">\n          <div className=\"flex justify-between items-start\">\n            <div>\n              <p className=\"text-sm text-muted-foreground mb-1\">Recommended Crop</p>\n              <h3 className=\"text-2xl font-bold text-primary\">{recommendation.cropName}</h3>\n            </div>\n            <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\" onClick={handleEdit}>\n              <Edit className=\"h-4 w-4\" />\n              <span className=\"sr-only\">Edit Recommendation</span>\n            </Button>\n          </div>\n          <div>\n            <p className=\"text-sm text-muted-foreground mb-1\">Predicted Farm Type</p>\n            <div className=\"flex gap-2\">\n              <Badge variant=\"secondary\">{recommendation.predictedFarmType}</Badge>\n            </div>\n          </div>\n          <div>\n            <p className=\"text-sm text-muted-foreground mb-1\">Reasoning</p>\n            <p className=\"text-sm\">{recommendation.reason}</p>\n          </div>\n           <Button onClick={onFetchRecommendation} variant=\"outline\" size=\"sm\" className=\"w-full mt-2\">\n            <RefreshCw className=\"mr-2 h-4 w-4\" />\n            Get Another Suggestion\n          </Button>\n        </div>\n      );\n    }\n\n    return (\n        <div className=\"text-center space-y-4 flex flex-col items-center justify-center h-48\">\n            <p className=\"text-sm text-muted-foreground max-w-xs\">\n                Click the button to get a personalized crop recommendation for your farm, powered by AI.\n            </p>\n            <Button onClick={onFetchRecommendation} disabled={!farmInfo}>\n                <Lightbulb className=\"mr-2 h-4 w-4\" />\n                Get Recommendation\n            </Button>\n        </div>\n    );\n  };\n  \n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"font-headline flex items-center gap-2\">\n          <Lightbulb className=\"h-6 w-6 text-primary\" />\n          <span>AI Crop Recommendation</span>\n        </CardTitle>\n        {farmInfo && (\n          <CardDescription className=\"flex items-center gap-1 pt-1\">\n            <MapPin className=\"h-3 w-3\" /> For your location in {farmInfo.city}, {farmInfo.state}\n          </CardDescription>\n        )}\n      </CardHeader>\n      <CardContent className=\"min-h-[240px] flex flex-col justify-center\">\n        {renderContent()}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3203, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { optimizeCropYield, type OptimizeCropYieldOutput } from '@/ai/flows/optimize-crop-yield';\nimport { recommendCrop, type RecommendCropOutput } from '@/ai/flows/recommend-crop-flow';\nimport { getCityClimate as getCityClimateFlow, type GetCityClimateOutput } from '@/ai/flows/get-city-climate-flow';\nimport { generateAlerts as generateAlertsFlow, type GenerateAlertsOutput } from '@/ai/flows/generate-alerts-flow';\nimport { recommendFertilizer, type RecommendFertilizerOutput } from '@/ai/flows/recommend-fertilizer-flow';\nimport { AiOptimizerSchema, CropRecommendationSchema, CityClimateSchema, GenerateAlertsInputSchema, FertilizerRecommenderSchema } from './schemas';\n\nexport async function getAiOptimization(\n    formData: unknown\n): Promise<{ data?: OptimizeCropYieldOutput; error?: string }> {\n  const validatedFields = AiOptimizerSchema.safeParse(formData);\n\n  if (!validatedFields.success) {\n    console.log(validatedFields.error.flatten().fieldErrors);\n    return { error: 'Invalid input.' };\n  }\n\n  try {\n    const result = await optimizeCropYield(validatedFields.data);\n    return { data: result };\n  } catch (e) {\n    console.error(e);\n    const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n    return { error: `Failed to get optimization suggestions: ${errorMessage}` };\n  }\n}\n\nexport async function getRecommendedCrop(\n    locationData: unknown\n): Promise<{ data?: RecommendCropOutput; error?: string }> {\n    const validatedFields = CropRecommendationSchema.safeParse(locationData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid location data.' };\n    }\n\n    try {\n        const result = await recommendCrop(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get crop recommendation: ${errorMessage}` };\n    }\n}\n\nexport async function getCityClimate(\n    locationData: unknown\n): Promise<{ data?: GetCityClimateOutput; error?: string }> {\n    const validatedFields = CityClimateSchema.safeParse(locationData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid location data.' };\n    }\n\n    try {\n        const result = await getCityClimateFlow(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get city climate: ${errorMessage}` };\n    }\n}\n\nexport async function getGeneratedAlerts(\n    inputData: unknown\n): Promise<{ data?: GenerateAlertsOutput; error?: string }> {\n    const validatedFields = GenerateAlertsInputSchema.safeParse(inputData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid input data.' };\n    }\n\n    try {\n        const result = await generateAlertsFlow(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to generate alerts: ${errorMessage}` };\n    }\n}\n\nexport async function getFertilizerRecommendation(\n    formData: unknown\n): Promise<{ data?: RecommendFertilizerOutput; error?: string }> {\n    const validatedFields = FertilizerRecommenderSchema.safeParse(formData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid input.' };\n    }\n\n    try {\n        const result = await recommendFertilizer(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get fertilizer recommendation: ${errorMessage}` };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAkDsB,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3219, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { optimizeCropYield, type OptimizeCropYieldOutput } from '@/ai/flows/optimize-crop-yield';\nimport { recommendCrop, type RecommendCropOutput } from '@/ai/flows/recommend-crop-flow';\nimport { getCityClimate as getCityClimateFlow, type GetCityClimateOutput } from '@/ai/flows/get-city-climate-flow';\nimport { generateAlerts as generateAlertsFlow, type GenerateAlertsOutput } from '@/ai/flows/generate-alerts-flow';\nimport { recommendFertilizer, type RecommendFertilizerOutput } from '@/ai/flows/recommend-fertilizer-flow';\nimport { AiOptimizerSchema, CropRecommendationSchema, CityClimateSchema, GenerateAlertsInputSchema, FertilizerRecommenderSchema } from './schemas';\n\nexport async function getAiOptimization(\n    formData: unknown\n): Promise<{ data?: OptimizeCropYieldOutput; error?: string }> {\n  const validatedFields = AiOptimizerSchema.safeParse(formData);\n\n  if (!validatedFields.success) {\n    console.log(validatedFields.error.flatten().fieldErrors);\n    return { error: 'Invalid input.' };\n  }\n\n  try {\n    const result = await optimizeCropYield(validatedFields.data);\n    return { data: result };\n  } catch (e) {\n    console.error(e);\n    const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n    return { error: `Failed to get optimization suggestions: ${errorMessage}` };\n  }\n}\n\nexport async function getRecommendedCrop(\n    locationData: unknown\n): Promise<{ data?: RecommendCropOutput; error?: string }> {\n    const validatedFields = CropRecommendationSchema.safeParse(locationData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid location data.' };\n    }\n\n    try {\n        const result = await recommendCrop(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get crop recommendation: ${errorMessage}` };\n    }\n}\n\nexport async function getCityClimate(\n    locationData: unknown\n): Promise<{ data?: GetCityClimateOutput; error?: string }> {\n    const validatedFields = CityClimateSchema.safeParse(locationData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid location data.' };\n    }\n\n    try {\n        const result = await getCityClimateFlow(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get city climate: ${errorMessage}` };\n    }\n}\n\nexport async function getGeneratedAlerts(\n    inputData: unknown\n): Promise<{ data?: GenerateAlertsOutput; error?: string }> {\n    const validatedFields = GenerateAlertsInputSchema.safeParse(inputData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid input data.' };\n    }\n\n    try {\n        const result = await generateAlertsFlow(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to generate alerts: ${errorMessage}` };\n    }\n}\n\nexport async function getFertilizerRecommendation(\n    formData: unknown\n): Promise<{ data?: RecommendFertilizerOutput; error?: string }> {\n    const validatedFields = FertilizerRecommenderSchema.safeParse(formData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid input.' };\n    }\n\n    try {\n        const result = await recommendFertilizer(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get fertilizer recommendation: ${errorMessage}` };\n    }\n}\n"],"names":[],"mappings":";;;;;;IA0FsB,8BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3235, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/fertilizer-recommender.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport { useEffect, useState } from \"react\";\nimport { Bot, Loader2, TestTube2 } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { FertilizerRecommenderSchema } from \"@/lib/schemas\";\nimport { getFertilizerRecommendation } from \"@/lib/actions\";\nimport type { RecommendFertilizerOutput } from \"@/ai/flows/recommend-fertilizer-flow\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\n\ninterface FertilizerRecommenderProps {\n  cropType?: string;\n  temperature?: number;\n  humidity?: number;\n}\n\nconst soilTypes = [\"Sandy\", \"Loamy\", \"Black\", \"Red\", \"Clayey\"];\n\nexport function FertilizerRecommender({ cropType, temperature, humidity }: FertilizerRecommenderProps) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [result, setResult] = useState<RecommendFertilizerOutput | null>(null);\n\n  const form = useForm<z.infer<typeof FertilizerRecommenderSchema>>({\n    resolver: zodResolver(FertilizerRecommenderSchema),\n    defaultValues: {\n      cropType: \"\",\n      temperature: 0,\n      humidity: 0,\n      moisture: 50,\n      soilType: \"\",\n      nitrogen: 50,\n      phosphorous: 50,\n      potassium: 50,\n    },\n  });\n\n  useEffect(() => {\n    if (cropType && !form.formState.dirtyFields.cropType) {\n      form.setValue('cropType', cropType);\n    }\n    if (temperature) {\n        form.setValue('temperature', parseFloat(temperature.toFixed(1)));\n    }\n    if (humidity) {\n        form.setValue('humidity', Math.round(humidity));\n    }\n  }, [cropType, temperature, humidity, form]);\n\n  async function onSubmit(values: z.infer<typeof FertilizerRecommenderSchema>) {\n    setIsLoading(true);\n    setResult(null);\n    const response = await getFertilizerRecommendation(values);\n    if (response.data) {\n      setResult(response.data);\n      localStorage.setItem('lastValidFertilizerRecommendation', JSON.stringify(response.data));\n    } else {\n      const cachedDataRaw = localStorage.getItem('lastValidFertilizerRecommendation');\n      if (cachedDataRaw) {\n        const cachedData = JSON.parse(cachedDataRaw);\n        setResult(cachedData);\n      }\n    }\n    setIsLoading(false);\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"font-headline flex items-center gap-2\">\n            <TestTube2 className=\"h-6 w-6 text-primary\" />\n            <span>AI Fertilizer Recommender</span>\n        </CardTitle>\n        <CardDescription>\n          Input soil and crop data to get a custom fertilizer recommendation from our AI.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <FormField\n                    control={form.control}\n                    name=\"cropType\"\n                    render={({ field }) => (\n                    <FormItem>\n                        <FormLabel>Crop Type</FormLabel>\n                        <FormControl>\n                        <Input placeholder=\"e.g., Rice\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                    </FormItem>\n                    )}\n                />\n                <FormField\n                    control={form.control}\n                    name=\"soilType\"\n                    render={({ field }) => (\n                    <FormItem>\n                        <FormLabel>Soil Type</FormLabel>\n                        <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                                <SelectTrigger>\n                                    <SelectValue placeholder=\"Select soil\" />\n                                </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                                {soilTypes.map(type => (\n                                    <SelectItem key={type} value={type}>{type}</SelectItem>\n                                ))}\n                            </SelectContent>\n                        </Select>\n                        <FormMessage />\n                    </FormItem>\n                    )}\n              />\n              <FormField\n                control={form.control}\n                name=\"temperature\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Temperature (°C)</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" step=\"0.1\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n               <FormField\n                control={form.control}\n                name=\"humidity\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Humidity (%)</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n             <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <FormField\n                    control={form.control}\n                    name=\"nitrogen\"\n                    render={({ field }) => (\n                    <FormItem>\n                        <FormLabel>Nitrogen (N)</FormLabel>\n                        <FormControl>\n                        <Input type=\"number\" placeholder=\"kg/ha\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                    </FormItem>\n                    )}\n                />\n                <FormField\n                    control={form.control}\n                    name=\"phosphorous\"\n                    render={({ field }) => (\n                    <FormItem>\n                        <FormLabel>Phosphorous (P)</FormLabel>\n                        <FormControl>\n                        <Input type=\"number\" placeholder=\"kg/ha\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                    </FormItem>\n                    )}\n                />\n                <FormField\n                    control={form.control}\n                    name=\"potassium\"\n                    render={({ field }) => (\n                    <FormItem>\n                        <FormLabel>Potassium (K)</FormLabel>\n                        <FormControl>\n                        <Input type=\"number\" placeholder=\"kg/ha\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                    </FormItem>\n                    )}\n                />\n                <FormField\n                    control={form.control}\n                    name=\"moisture\"\n                    render={({ field }) => (\n                    <FormItem>\n                        <FormLabel>Soil Moisture (%)</FormLabel>\n                        <FormControl>\n                        <Input type=\"number\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                    </FormItem>\n                    )}\n                />\n            </div>\n            <Button type=\"submit\" disabled={isLoading}>\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Analyzing...\n                </>\n              ) : (\n                \"Get Recommendation\"\n              )}\n            </Button>\n          </form>\n        </Form>\n        \n        <div className=\"mt-6\">\n          <Alert className=\"border-primary/50 bg-primary/10 min-h-[140px] flex flex-col\">\n              <Bot className=\"h-4 w-4 text-primary\" />\n              <AlertTitle className=\"font-headline text-primary\">\n                  {result ? `Fertilizer Recommendation: ${result.fertilizerName}`: \"Fertilizer Recommendation\"}\n              </AlertTitle>\n              <AlertDescription className=\"flex-grow flex flex-col\">\n                 {result ? (\n                    <>\n                        <p className=\"font-semibold mt-4 mb-2 text-foreground\">Reasoning:</p>\n                        <p className=\"text-muted-foreground\">{result.reasoning}</p>\n                    </>\n                 ) : (\n                    <div className=\"flex items-center justify-center flex-grow\">\n                        <p className=\"text-muted-foreground\">Your AI fertilizer recommendation will appear here.</p>\n                    </div>\n                 )}\n              </AlertDescription>\n          </Alert>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3894, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/app/dashboard/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useEffect, useState, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { format, subDays } from \"date-fns\";\nimport { MetricCard } from \"@/components/metric-card\";\nimport { DataChart } from \"@/components/data-chart\";\nimport { AiOptimizer } from \"@/components/ai-optimizer\";\nimport { Thermometer, Droplets, Sun, Info } from \"lucide-react\";\nimport { AlertsPreview } from \"@/components/alerts-preview\";\nimport { CropRecommender } from \"@/components/crop-recommender\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { getCityClimate, getRecommendedCrop } from \"@/lib/actions\";\nimport type { RecommendCropOutput } from \"@/ai/flows/recommend-crop-flow\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { FertilizerRecommender } from \"@/components/fertilizer-recommender\";\n\nconst containerVariants = {\n  hidden: { opacity: 1 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst itemVariants = {\n  hidden: { y: 20, opacity: 0 },\n  visible: { y: 0, opacity: 1 }\n};\n\ntype MetricData = {\n  value: string;\n  change: string;\n  changeType: 'increase' | 'decrease';\n  trendData: { x: number; y: number }[];\n};\n\ntype ChartData = { day: string; temperature: number; humidity: number; light: number };\ntype AlertData = { icon: JSX.Element; title: string; description: string; time: string; severity: \"High\" | \"Medium\" | \"Low\" };\n\nexport default function DashboardPage() {\n  const [loading, setLoading] = useState(true);\n  const [metrics, setMetrics] = useState<{ temp: MetricData | null; humidity: MetricData | null; light: MetricData | null }>({ temp: null, humidity: null, light: null });\n  const [chartData, setChartData] = useState<ChartData[]>([]);\n  const [alertData, setAlertData] = useState<AlertData[]>([]);\n  const [baseMetrics, setBaseMetrics] = useState<{temp: number, humidity: number} | null>(null);\n  const [climateInfo, setClimateInfo] = useState<{ description: string } | null>(null);\n  const [farmInfo, setFarmInfo] = useState<{ city: string; state: string; } | null>(null);\n  const [recommendedCrop, setRecommendedCrop] = useState<RecommendCropOutput | null>(null);\n  const [previousCrops, setPreviousCrops] = useState<string[]>([]);\n  const [isRecommenderLoading, setIsRecommenderLoading] = useState(false);\n  const [recommenderError, setRecommenderError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  // On initial mount, fetch all necessary data for the dashboard\n  useEffect(() => {\n    const initializeDashboard = async () => {\n      // 1. Get Farm Info from localStorage\n      let city = \"Bengaluru\";\n      let state = \"Karnataka\";\n      const storedAddress = localStorage.getItem('farm_address');\n      if (storedAddress) {\n        const address = JSON.parse(storedAddress);\n        if (address.city && address.state) {\n            city = address.city;\n            state = address.state;\n        }\n      }\n      const currentFarmInfo = { city, state };\n      setFarmInfo(currentFarmInfo);\n\n      // 2. Fetch critical data in parallel\n      const [climateResponse, recommendationResponse] = await Promise.all([\n        getCityClimate(currentFarmInfo),\n        getRecommendedCrop(currentFarmInfo)\n      ]);\n\n      // 3. Process climate data, which will trigger the polling useEffect for live metrics\n      if (climateResponse.data) {\n          setBaseMetrics({\n              temp: climateResponse.data.averageTemp,\n              humidity: climateResponse.data.averageHumidity\n          });\n          setClimateInfo({ description: climateResponse.data.climateDescription });\n      } else {\n          // Fallback to defaults if climate API fails\n          setBaseMetrics({ temp: 24.5, humidity: 65 });\n          setClimateInfo({ description: \"Default temperate climate.\" });\n      }\n\n      // 4. Process recommendation data\n      if (recommendationResponse.data) {\n        setRecommendedCrop(recommendationResponse.data);\n        localStorage.setItem('lastValidCropRecommendation', JSON.stringify(recommendationResponse.data));\n        if (recommendationResponse.data.cropName) {\n            setPreviousCrops([recommendationResponse.data.cropName]);\n        }\n      } else {\n        // If API fails, try to load from cache as a fallback\n        const cachedRecommendationRaw = localStorage.getItem('lastValidCropRecommendation');\n        if (cachedRecommendationRaw) {\n            const cachedRecommendation = JSON.parse(cachedRecommendationRaw);\n            setRecommendedCrop(cachedRecommendation);\n            if (cachedRecommendation.cropName) {\n                setPreviousCrops([cachedRecommendation.cropName]);\n            }\n        }\n      }\n      \n      // 5. All initial data has been fetched, stop loading\n      setLoading(false);\n    };\n\n    initializeDashboard();\n  }, []); // Empty dependency array ensures this runs only once on mount\n\n  const handleFetchRecommendation = useCallback(async () => {\n    if (!farmInfo) {\n        return;\n    }\n    setIsRecommenderLoading(true);\n    setRecommenderError(null);\n    const response = await getRecommendedCrop({ ...farmInfo, excludeCrops: previousCrops });\n    \n    if (response.data) {\n        setRecommendedCrop(response.data);\n        if (response.data.cropName && !previousCrops.includes(response.data.cropName)) {\n            setPreviousCrops(prev => [...prev, response.data.cropName]);\n        }\n        localStorage.setItem('lastValidCropRecommendation', JSON.stringify(response.data));\n    } else {\n        const cachedRecommendationRaw = localStorage.getItem('lastValidCropRecommendation');\n        if (cachedRecommendationRaw) {\n            const cachedRecommendation = JSON.parse(cachedRecommendationRaw);\n            setRecommendedCrop(cachedRecommendation);\n        }\n    }\n    setIsRecommenderLoading(false);\n  }, [farmInfo, previousCrops]);\n  \n  const handleSaveRecommendation = useCallback((newRecommendation: RecommendCropOutput) => {\n    setRecommendedCrop(newRecommendation);\n    localStorage.setItem('lastValidCropRecommendation', JSON.stringify(newRecommendation));\n    toast({\n        title: \"Recommendation Updated\",\n        description: \"Your custom crop settings have been saved.\",\n    });\n  }, [toast]);\n\n  // This useEffect is for polling live sensor data and updating charts.\n  // It triggers once baseMetrics are available and then polls every 5 seconds.\n  useEffect(() => {\n    if (!baseMetrics) return;\n\n    const pollLiveData = () => {\n      const { temp: baseTemp, humidity: baseHumidity } = baseMetrics;\n      \n      const tempValue = baseTemp + (Math.random() - 0.5) * 2;\n      const humidityValue = baseHumidity + (Math.random() * 4 - 2);\n      const lightValue = 12.5 + (Math.random() * 0.4 - 0.2);\n\n      setMetrics({\n        temp: { value: `${tempValue.toFixed(1)}°C`, change: `${(Math.random() * 0.5).toFixed(1)}°C`, changeType: Math.random() > 0.5 ? 'increase' : 'decrease', trendData: Array.from({ length: 10 }, (_, i) => ({ x: i, y: baseTemp - 1 + Math.random()*2 })) },\n        humidity: { value: `${humidityValue.toFixed(0)}%`, change: `${Math.round(Math.random() * 2)}%`, changeType: Math.random() > 0.5 ? 'increase' : 'decrease', trendData: Array.from({ length: 10 }, (_, i) => ({ x: i, y: baseHumidity - 2 + Math.random() * 4 })) },\n        light: { value: `${lightValue.toFixed(1)} klx`, change: `${(Math.random() * 0.2).toFixed(1)} klx`, changeType: 'increase', trendData: Array.from({ length: 10 }, (_, i) => ({ x: i, y: 12 + Math.random() * 0.5 })) },\n      });\n\n      const today = new Date();\n      setChartData(Array.from({ length: 30 }).map((_, i) => {\n        const date = subDays(today, 29 - i);\n        return {\n          day: format(date, 'MMM d'),\n          temperature: baseTemp - 2 + Math.random() * 4,\n          humidity: baseHumidity - 5 + Math.random() * 10,\n          light: 12 + Math.random() * 1.5,\n        };\n      }));\n      \n      setAlertData([\n          { icon: <Thermometer className=\"h-4 w-4\" />, title: \"High Temperature\", description: \"Greenhouse 1 exceeded 30°C.\", time: \"5m ago\", severity: \"High\" },\n          { icon: <Droplets className=\"h-4 w-4\" />, title: \"Low Humidity\", description: \"Lettuce section humidity dropped to 45%.\", time: \"30m ago\", severity: \"Medium\" },\n      ]);\n    };\n\n    pollLiveData(); // Run once immediately when baseMetrics are available\n    const intervalId = setInterval(pollLiveData, 5000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [baseMetrics]);\n\n  if (loading) {\n    return (\n      <div className=\"space-y-8\">\n        <div className=\"space-y-2\">\n            <Skeleton className=\"h-9 w-64\" />\n            <Skeleton className=\"h-5 w-96\" />\n        </div>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            <Skeleton className=\"h-32\" />\n            <Skeleton className=\"h-32\" />\n            <Skeleton className=\"h-32\" />\n        </div>\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            <div className=\"lg:col-span-2 space-y-8\">\n                <Skeleton className=\"h-96\" />\n                <Skeleton className=\"h-96\" />\n            </div>\n            <div className=\"lg:col-span-1 space-y-8\">\n                <Skeleton className=\"h-64\" />\n                <Skeleton className=\"h-64\" />\n            </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <motion.div \n      initial=\"hidden\"\n      animate=\"visible\"\n      variants={containerVariants}\n      className=\"space-y-8\"\n    >\n      <motion.div variants={itemVariants}>\n        <h1 className=\"text-3xl font-bold tracking-tight font-headline\">Dashboard</h1>\n        {farmInfo && !loading ? (\n            <p className=\"text-muted-foreground flex items-center gap-2 pt-1\">\n                <Info className=\"h-4 w-4\" /> \n                <span>Live overview for your farm in {farmInfo.city}. Climate: {climateInfo?.description}</span>\n            </p>\n        ) : (\n            <p className=\"text-muted-foreground\">Welcome back! Here's a live overview of your vertical farm.</p>\n        )}\n      </motion.div>\n      \n      <motion.div variants={containerVariants} className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {metrics.temp && <MetricCard icon={<Thermometer className=\"h-6 w-6 text-muted-foreground\" />} title=\"Temperature\" {...metrics.temp} />}\n        {metrics.humidity && <MetricCard icon={<Droplets className=\"h-6 w-6 text-muted-foreground\" />} title=\"Humidity\" {...metrics.humidity} />}\n        {metrics.light && <MetricCard icon={<Sun className=\"h-6 w-6 text-muted-foreground\" />} title=\"Light Level\" {...metrics.light} />}\n      </motion.div>\n\n      <motion.div variants={containerVariants} className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        <motion.div variants={itemVariants} className=\"lg:col-span-2 space-y-8\">\n            <DataChart data={chartData} />\n            <AiOptimizer \n              cropType={recommendedCrop?.cropName}\n              temperature={metrics.temp ? parseFloat(metrics.temp.value) : undefined}\n              humidity={metrics.humidity ? parseFloat(metrics.humidity.value) : undefined}\n              lightLevel={metrics.light ? parseFloat(metrics.light.value) * 1000 : undefined}\n            />\n            <FertilizerRecommender \n              cropType={recommendedCrop?.cropName}\n              temperature={metrics.temp ? parseFloat(metrics.temp.value) : undefined}\n              humidity={metrics.humidity ? parseFloat(metrics.humidity.value) : undefined}\n            />\n        </motion.div>\n        <motion.div variants={itemVariants} className=\"lg:col-span-1 space-y-8\">\n            <CropRecommender \n              recommendation={recommendedCrop}\n              farmInfo={farmInfo}\n              isLoading={isRecommenderLoading}\n              error={recommenderError}\n              onFetchRecommendation={handleFetchRecommendation}\n              onSaveRecommendation={handleSaveRecommendation}\n            />\n            <AlertsPreview alerts={alertData} />\n        </motion.div>\n      </motion.div>\n\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;;;AAfA;;;;;;;;;;;;;;AAiBA,MAAM,oBAAoB;IACxB,QAAQ;QAAE,SAAS;IAAE;IACrB,SAAS;QACP,SAAS;QACT,YAAY;YACV,iBAAiB;QACnB;IACF;AACF;AAEA,MAAM,eAAe;IACnB,QAAQ;QAAE,GAAG;QAAI,SAAS;IAAE;IAC5B,SAAS;QAAE,GAAG;QAAG,SAAS;IAAE;AAC9B;AAYe,SAAS;;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsF;QAAE,MAAM;QAAM,UAAU;QAAM,OAAO;IAAK;IACrK,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IAC1D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IAC1D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA2C;IACxF,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkC;IAC/E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA2C;IAClF,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA8B;IACnF,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC/D,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACxE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,+DAA+D;IAC/D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM;+DAAsB;oBAC1B,qCAAqC;oBACrC,IAAI,OAAO;oBACX,IAAI,QAAQ;oBACZ,MAAM,gBAAgB,aAAa,OAAO,CAAC;oBAC3C,IAAI,eAAe;wBACjB,MAAM,UAAU,KAAK,KAAK,CAAC;wBAC3B,IAAI,QAAQ,IAAI,IAAI,QAAQ,KAAK,EAAE;4BAC/B,OAAO,QAAQ,IAAI;4BACnB,QAAQ,QAAQ,KAAK;wBACzB;oBACF;oBACA,MAAM,kBAAkB;wBAAE;wBAAM;oBAAM;oBACtC,YAAY;oBAEZ,qCAAqC;oBACrC,MAAM,CAAC,iBAAiB,uBAAuB,GAAG,MAAM,QAAQ,GAAG,CAAC;wBAClE,CAAA,GAAA,qJAAA,CAAA,iBAAc,AAAD,EAAE;wBACf,CAAA,GAAA,qJAAA,CAAA,qBAAkB,AAAD,EAAE;qBACpB;oBAED,qFAAqF;oBACrF,IAAI,gBAAgB,IAAI,EAAE;wBACtB,eAAe;4BACX,MAAM,gBAAgB,IAAI,CAAC,WAAW;4BACtC,UAAU,gBAAgB,IAAI,CAAC,eAAe;wBAClD;wBACA,eAAe;4BAAE,aAAa,gBAAgB,IAAI,CAAC,kBAAkB;wBAAC;oBAC1E,OAAO;wBACH,4CAA4C;wBAC5C,eAAe;4BAAE,MAAM;4BAAM,UAAU;wBAAG;wBAC1C,eAAe;4BAAE,aAAa;wBAA6B;oBAC/D;oBAEA,iCAAiC;oBACjC,IAAI,uBAAuB,IAAI,EAAE;wBAC/B,mBAAmB,uBAAuB,IAAI;wBAC9C,aAAa,OAAO,CAAC,+BAA+B,KAAK,SAAS,CAAC,uBAAuB,IAAI;wBAC9F,IAAI,uBAAuB,IAAI,CAAC,QAAQ,EAAE;4BACtC,iBAAiB;gCAAC,uBAAuB,IAAI,CAAC,QAAQ;6BAAC;wBAC3D;oBACF,OAAO;wBACL,qDAAqD;wBACrD,MAAM,0BAA0B,aAAa,OAAO,CAAC;wBACrD,IAAI,yBAAyB;4BACzB,MAAM,uBAAuB,KAAK,KAAK,CAAC;4BACxC,mBAAmB;4BACnB,IAAI,qBAAqB,QAAQ,EAAE;gCAC/B,iBAAiB;oCAAC,qBAAqB,QAAQ;iCAAC;4BACpD;wBACJ;oBACF;oBAEA,qDAAqD;oBACrD,WAAW;gBACb;;YAEA;QACF;kCAAG,EAAE,GAAG,8DAA8D;IAEtE,MAAM,4BAA4B,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;gEAAE;YAC5C,IAAI,CAAC,UAAU;gBACX;YACJ;YACA,wBAAwB;YACxB,oBAAoB;YACpB,MAAM,WAAW,MAAM,CAAA,GAAA,qJAAA,CAAA,qBAAkB,AAAD,EAAE;gBAAE,GAAG,QAAQ;gBAAE,cAAc;YAAc;YAErF,IAAI,SAAS,IAAI,EAAE;gBACf,mBAAmB,SAAS,IAAI;gBAChC,IAAI,SAAS,IAAI,CAAC,QAAQ,IAAI,CAAC,cAAc,QAAQ,CAAC,SAAS,IAAI,CAAC,QAAQ,GAAG;oBAC3E;gFAAiB,CAAA,OAAQ;mCAAI;gCAAM,SAAS,IAAI,CAAC,QAAQ;6BAAC;;gBAC9D;gBACA,aAAa,OAAO,CAAC,+BAA+B,KAAK,SAAS,CAAC,SAAS,IAAI;YACpF,OAAO;gBACH,MAAM,0BAA0B,aAAa,OAAO,CAAC;gBACrD,IAAI,yBAAyB;oBACzB,MAAM,uBAAuB,KAAK,KAAK,CAAC;oBACxC,mBAAmB;gBACvB;YACJ;YACA,wBAAwB;QAC1B;+DAAG;QAAC;QAAU;KAAc;IAE5B,MAAM,2BAA2B,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+DAAE,CAAC;YAC5C,mBAAmB;YACnB,aAAa,OAAO,CAAC,+BAA+B,KAAK,SAAS,CAAC;YACnE,MAAM;gBACF,OAAO;gBACP,aAAa;YACjB;QACF;8DAAG;QAAC;KAAM;IAEV,sEAAsE;IACtE,6EAA6E;IAC7E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,CAAC,aAAa;YAElB,MAAM;wDAAe;oBACnB,MAAM,EAAE,MAAM,QAAQ,EAAE,UAAU,YAAY,EAAE,GAAG;oBAEnD,MAAM,YAAY,WAAW,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;oBACrD,MAAM,gBAAgB,eAAe,CAAC,KAAK,MAAM,KAAK,IAAI,CAAC;oBAC3D,MAAM,aAAa,OAAO,CAAC,KAAK,MAAM,KAAK,MAAM,GAAG;oBAEpD,WAAW;wBACT,MAAM;4BAAE,OAAO,GAAG,UAAU,OAAO,CAAC,GAAG,EAAE,CAAC;4BAAE,QAAQ,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC;4BAAE,YAAY,KAAK,MAAM,KAAK,MAAM,aAAa;4BAAY,WAAW,MAAM,IAAI,CAAC;gCAAE,QAAQ;4BAAG;wEAAG,CAAC,GAAG,IAAM,CAAC;wCAAE,GAAG;wCAAG,GAAG,WAAW,IAAI,KAAK,MAAM,KAAG;oCAAE,CAAC;;wBAAG;wBACvP,UAAU;4BAAE,OAAO,GAAG,cAAc,OAAO,CAAC,GAAG,CAAC,CAAC;4BAAE,QAAQ,GAAG,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,GAAG,CAAC,CAAC;4BAAE,YAAY,KAAK,MAAM,KAAK,MAAM,aAAa;4BAAY,WAAW,MAAM,IAAI,CAAC;gCAAE,QAAQ;4BAAG;wEAAG,CAAC,GAAG,IAAM,CAAC;wCAAE,GAAG;wCAAG,GAAG,eAAe,IAAI,KAAK,MAAM,KAAK;oCAAE,CAAC;;wBAAG;wBAChQ,OAAO;4BAAE,OAAO,GAAG,WAAW,OAAO,CAAC,GAAG,IAAI,CAAC;4BAAE,QAAQ,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC;4BAAE,YAAY;4BAAY,WAAW,MAAM,IAAI,CAAC;gCAAE,QAAQ;4BAAG;wEAAG,CAAC,GAAG,IAAM,CAAC;wCAAE,GAAG;wCAAG,GAAG,KAAK,KAAK,MAAM,KAAK;oCAAI,CAAC;;wBAAG;oBACtN;oBAEA,MAAM,QAAQ,IAAI;oBAClB,aAAa,MAAM,IAAI,CAAC;wBAAE,QAAQ;oBAAG,GAAG,GAAG;gEAAC,CAAC,GAAG;4BAC9C,MAAM,OAAO,CAAA,GAAA,0IAAA,CAAA,UAAO,AAAD,EAAE,OAAO,KAAK;4BACjC,OAAO;gCACL,KAAK,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;gCAClB,aAAa,WAAW,IAAI,KAAK,MAAM,KAAK;gCAC5C,UAAU,eAAe,IAAI,KAAK,MAAM,KAAK;gCAC7C,OAAO,KAAK,KAAK,MAAM,KAAK;4BAC9B;wBACF;;oBAEA,aAAa;wBACT;4BAAE,oBAAM,6LAAC,mNAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;4BAAc,OAAO;4BAAoB,aAAa;4BAA+B,MAAM;4BAAU,UAAU;wBAAO;wBACrJ;4BAAE,oBAAM,6LAAC,6MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;4BAAc,OAAO;4BAAgB,aAAa;4BAA4C,MAAM;4BAAW,UAAU;wBAAS;qBACjK;gBACH;;YAEA,gBAAgB,sDAAsD;YACtE,MAAM,aAAa,YAAY,cAAc;YAE7C;2CAAO;oBACL,cAAc;gBAChB;;QACF;kCAAG;QAAC;KAAY;IAEhB,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACX,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;;8BAExB,6LAAC;oBAAI,WAAU;;sCACX,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;;8BAExB,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAI,WAAU;;8CACX,6LAAC,uIAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;8CACpB,6LAAC,uIAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;;;;;;;sCAExB,6LAAC;4BAAI,WAAU;;8CACX,6LAAC,uIAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;8CACpB,6LAAC,uIAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;IAKlC;IAEA,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;QACT,SAAQ;QACR,SAAQ;QACR,UAAU;QACV,WAAU;;0BAEV,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gBAAC,UAAU;;kCACpB,6LAAC;wBAAG,WAAU;kCAAkD;;;;;;oBAC/D,YAAY,CAAC,wBACV,6LAAC;wBAAE,WAAU;;0CACT,6LAAC,qMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;0CAChB,6LAAC;;oCAAK;oCAAgC,SAAS,IAAI;oCAAC;oCAAY,aAAa;;;;;;;;;;;;6CAGjF,6LAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;0BAI3C,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gBAAC,UAAU;gBAAmB,WAAU;;oBAChD,QAAQ,IAAI,kBAAI,6LAAC,uIAAA,CAAA,aAAU;wBAAC,oBAAM,6LAAC,mNAAA,CAAA,cAAW;4BAAC,WAAU;;;;;;wBAAoC,OAAM;wBAAe,GAAG,QAAQ,IAAI;;;;;;oBACjI,QAAQ,QAAQ,kBAAI,6LAAC,uIAAA,CAAA,aAAU;wBAAC,oBAAM,6LAAC,6MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;wBAAoC,OAAM;wBAAY,GAAG,QAAQ,QAAQ;;;;;;oBACnI,QAAQ,KAAK,kBAAI,6LAAC,uIAAA,CAAA,aAAU;wBAAC,oBAAM,6LAAC,mMAAA,CAAA,MAAG;4BAAC,WAAU;;;;;;wBAAoC,OAAM;wBAAe,GAAG,QAAQ,KAAK;;;;;;;;;;;;0BAG9H,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gBAAC,UAAU;gBAAmB,WAAU;;kCACjD,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;wBAAC,UAAU;wBAAc,WAAU;;0CAC1C,6LAAC,sIAAA,CAAA,YAAS;gCAAC,MAAM;;;;;;0CACjB,6LAAC,wIAAA,CAAA,cAAW;gCACV,UAAU,iBAAiB;gCAC3B,aAAa,QAAQ,IAAI,GAAG,WAAW,QAAQ,IAAI,CAAC,KAAK,IAAI;gCAC7D,UAAU,QAAQ,QAAQ,GAAG,WAAW,QAAQ,QAAQ,CAAC,KAAK,IAAI;gCAClE,YAAY,QAAQ,KAAK,GAAG,WAAW,QAAQ,KAAK,CAAC,KAAK,IAAI,OAAO;;;;;;0CAEvE,6LAAC,kJAAA,CAAA,wBAAqB;gCACpB,UAAU,iBAAiB;gCAC3B,aAAa,QAAQ,IAAI,GAAG,WAAW,QAAQ,IAAI,CAAC,KAAK,IAAI;gCAC7D,UAAU,QAAQ,QAAQ,GAAG,WAAW,QAAQ,QAAQ,CAAC,KAAK,IAAI;;;;;;;;;;;;kCAGxE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;wBAAC,UAAU;wBAAc,WAAU;;0CAC1C,6LAAC,4IAAA,CAAA,kBAAe;gCACd,gBAAgB;gCAChB,UAAU;gCACV,WAAW;gCACX,OAAO;gCACP,uBAAuB;gCACvB,sBAAsB;;;;;;0CAExB,6LAAC,0IAAA,CAAA,gBAAa;gCAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;AAMnC;GAzOwB;;QAYJ,+HAAA,CAAA,WAAQ;;;KAZJ","debugId":null}}]
}