{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { optimizeCropYield, type OptimizeCropYieldOutput } from '@/ai/flows/optimize-crop-yield';\nimport { recommendCrop, type RecommendCropOutput } from '@/ai/flows/recommend-crop-flow';\nimport { getCityClimate as getCityClimateFlow, type GetCityClimateOutput } from '@/ai/flows/get-city-climate-flow';\nimport { generateAlerts as generateAlertsFlow, type GenerateAlertsOutput } from '@/ai/flows/generate-alerts-flow';\nimport { recommendFertilizer, type RecommendFertilizerOutput } from '@/ai/flows/recommend-fertilizer-flow';\nimport { AiOptimizerSchema, CropRecommendationSchema, CityClimateSchema, GenerateAlertsInputSchema, FertilizerRecommenderSchema } from './schemas';\n\nexport async function getAiOptimization(\n    formData: unknown\n): Promise<{ data?: OptimizeCropYieldOutput; error?: string }> {\n  const validatedFields = AiOptimizerSchema.safeParse(formData);\n\n  if (!validatedFields.success) {\n    console.log(validatedFields.error.flatten().fieldErrors);\n    return { error: 'Invalid input.' };\n  }\n\n  try {\n    const result = await optimizeCropYield(validatedFields.data);\n    return { data: result };\n  } catch (e) {\n    console.error(e);\n    const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n    return { error: `Failed to get optimization suggestions: ${errorMessage}` };\n  }\n}\n\nexport async function getRecommendedCrop(\n    locationData: unknown\n): Promise<{ data?: RecommendCropOutput; error?: string }> {\n    const validatedFields = CropRecommendationSchema.safeParse(locationData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid location data.' };\n    }\n\n    try {\n        const result = await recommendCrop(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get crop recommendation: ${errorMessage}` };\n    }\n}\n\nexport async function getCityClimate(\n    locationData: unknown\n): Promise<{ data?: GetCityClimateOutput; error?: string }> {\n    const validatedFields = CityClimateSchema.safeParse(locationData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid location data.' };\n    }\n\n    try {\n        const result = await getCityClimateFlow(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get city climate: ${errorMessage}` };\n    }\n}\n\nexport async function getGeneratedAlerts(\n    inputData: unknown\n): Promise<{ data?: GenerateAlertsOutput; error?: string }> {\n    const validatedFields = GenerateAlertsInputSchema.safeParse(inputData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid input data.' };\n    }\n\n    try {\n        const result = await generateAlertsFlow(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to generate alerts: ${errorMessage}` };\n    }\n}\n\nexport async function getFertilizerRecommendation(\n    formData: unknown\n): Promise<{ data?: RecommendFertilizerOutput; error?: string }> {\n    const validatedFields = FertilizerRecommenderSchema.safeParse(formData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid input.' };\n    }\n\n    try {\n        const result = await recommendFertilizer(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get fertilizer recommendation: ${errorMessage}` };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAsEsB,qBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { optimizeCropYield, type OptimizeCropYieldOutput } from '@/ai/flows/optimize-crop-yield';\nimport { recommendCrop, type RecommendCropOutput } from '@/ai/flows/recommend-crop-flow';\nimport { getCityClimate as getCityClimateFlow, type GetCityClimateOutput } from '@/ai/flows/get-city-climate-flow';\nimport { generateAlerts as generateAlertsFlow, type GenerateAlertsOutput } from '@/ai/flows/generate-alerts-flow';\nimport { recommendFertilizer, type RecommendFertilizerOutput } from '@/ai/flows/recommend-fertilizer-flow';\nimport { AiOptimizerSchema, CropRecommendationSchema, CityClimateSchema, GenerateAlertsInputSchema, FertilizerRecommenderSchema } from './schemas';\n\nexport async function getAiOptimization(\n    formData: unknown\n): Promise<{ data?: OptimizeCropYieldOutput; error?: string }> {\n  const validatedFields = AiOptimizerSchema.safeParse(formData);\n\n  if (!validatedFields.success) {\n    console.log(validatedFields.error.flatten().fieldErrors);\n    return { error: 'Invalid input.' };\n  }\n\n  try {\n    const result = await optimizeCropYield(validatedFields.data);\n    return { data: result };\n  } catch (e) {\n    console.error(e);\n    const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n    return { error: `Failed to get optimization suggestions: ${errorMessage}` };\n  }\n}\n\nexport async function getRecommendedCrop(\n    locationData: unknown\n): Promise<{ data?: RecommendCropOutput; error?: string }> {\n    const validatedFields = CropRecommendationSchema.safeParse(locationData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid location data.' };\n    }\n\n    try {\n        const result = await recommendCrop(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get crop recommendation: ${errorMessage}` };\n    }\n}\n\nexport async function getCityClimate(\n    locationData: unknown\n): Promise<{ data?: GetCityClimateOutput; error?: string }> {\n    const validatedFields = CityClimateSchema.safeParse(locationData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid location data.' };\n    }\n\n    try {\n        const result = await getCityClimateFlow(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get city climate: ${errorMessage}` };\n    }\n}\n\nexport async function getGeneratedAlerts(\n    inputData: unknown\n): Promise<{ data?: GenerateAlertsOutput; error?: string }> {\n    const validatedFields = GenerateAlertsInputSchema.safeParse(inputData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid input data.' };\n    }\n\n    try {\n        const result = await generateAlertsFlow(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to generate alerts: ${errorMessage}` };\n    }\n}\n\nexport async function getFertilizerRecommendation(\n    formData: unknown\n): Promise<{ data?: RecommendFertilizerOutput; error?: string }> {\n    const validatedFields = FertilizerRecommenderSchema.safeParse(formData);\n\n    if (!validatedFields.success) {\n        console.log(validatedFields.error.flatten().fieldErrors);\n        return { error: 'Invalid input.' };\n    }\n\n    try {\n        const result = await recommendFertilizer(validatedFields.data);\n        return { data: result };\n    } catch (e) {\n        console.error(e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { error: `Failed to get fertilizer recommendation: ${errorMessage}` };\n    }\n}\n"],"names":[],"mappings":";;;;;;IA8BsB,qBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm transition-colors\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8EACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/alert-card.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { AlertCircle, Thermometer, Droplets, Lightbulb, HardDrive, BatteryWarning, Wrench, CheckCircle, LightbulbIcon } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"./ui/tooltip\";\n\nexport type Alert = {\n  id: string;\n  severity: \"Critical\" | \"Warning\" | \"Info\";\n  type: \"Temperature\" | \"Moisture\" | \"Nutrients\" | \"Light\" | \"Hardware\" | \"Power\";\n  component: string;\n  message: string;\n  timestamp: string;\n  status: \"Active\" | \"Resolved\";\n  suggestion: string;\n};\n\ninterface AlertCardProps {\n  alert: Alert;\n  onResolve: (id: string) => void;\n}\n\nconst alertConfig = {\n  Critical: {\n    icon: AlertCircle,\n    color: \"border-red-500/50 bg-red-500/10 text-red-500\",\n    badge: \"destructive\",\n  },\n  Warning: {\n    icon: AlertCircle,\n    color: \"border-yellow-500/50 bg-yellow-500/10 text-yellow-500\",\n    badge: \"secondary\",\n  },\n  Info: {\n    icon: AlertCircle,\n    color: \"border-blue-500/50 bg-blue-500/10 text-blue-500\",\n    badge: \"outline\",\n  },\n};\n\nconst typeIcons = {\n    Temperature: Thermometer,\n    Moisture: Droplets,\n    Nutrients: Wrench,\n    Light: Lightbulb,\n    Hardware: HardDrive,\n    Power: BatteryWarning,\n}\n\nexport function AlertCard({ alert, onResolve }: AlertCardProps) {\n  const config = alertConfig[alert.severity];\n  const TypeIcon = typeIcons[alert.type];\n\n  return (\n    <Card className={cn(\"flex flex-col h-full transition-all duration-300\", alert.status === 'Active' ? config.color : \"border-muted/50 bg-muted/20\")}>\n      <CardHeader className=\"flex-row items-start gap-4 space-y-0\">\n        <div className=\"flex-shrink-0\">\n          <TypeIcon className={cn(\"h-6 w-6\", alert.status === 'Active' ? 'text-primary' : 'text-muted-foreground')} />\n        </div>\n        <div className=\"flex-1\">\n          <CardTitle className=\"text-base font-semibold\">{alert.component}</CardTitle>\n          <CardDescription className={cn(\"text-sm\", alert.status === 'Resolved' && 'text-muted-foreground')}>{alert.message}</CardDescription>\n        </div>\n        <div className=\"flex-shrink-0\">\n            <Badge variant={alert.status === 'Active' ? config.badge as any : 'outline'}>{alert.severity}</Badge>\n        </div>\n      </CardHeader>\n      <CardContent className=\"flex-grow space-y-4\">\n        <div className=\"text-xs text-muted-foreground flex items-center justify-between\">\n           <span>{alert.timestamp}</span>\n           <Badge variant=\"outline\" className={cn(alert.status === 'Resolved' && 'bg-green-500/20 text-green-700 dark:text-green-400 border-green-500/30')}>\n                {alert.status === 'Resolved' && <CheckCircle className=\"h-3 w-3 mr-1\" />}\n                {alert.status}\n           </Badge>\n        </div>\n        \n        <TooltipProvider>\n            <Tooltip>\n                <TooltipTrigger asChild>\n                    <div className=\"p-3 rounded-md bg-background/50 border border-dashed flex items-start gap-3\">\n                        <LightbulbIcon className=\"h-5 w-5 flex-shrink-0 text-primary mt-0.5\" />\n                        <div>\n                            <p className=\"text-xs font-semibold text-foreground\">AI Suggestion</p>\n                            <p className=\"text-xs text-muted-foreground\">{alert.suggestion}</p>\n                        </div>\n                    </div>\n                </TooltipTrigger>\n                <TooltipContent>\n                    <p>AI-powered resolution tip</p>\n                </TooltipContent>\n            </Tooltip>\n        </TooltipProvider>\n\n      </CardContent>\n      <CardFooter>\n        {alert.status === 'Active' && (\n          <Button className=\"w-full\" size=\"sm\" onClick={() => onResolve(alert.id)}>\n            <CheckCircle className=\"mr-2 h-4 w-4\" />\n            Mark as Resolved\n          </Button>\n        )}\n      </CardFooter>\n    </Card>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 623, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Documents/urban_vertical_forming/studio-master/src/app/dashboard/alerts/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { AlertTriangle, Filter, Loader2 } from \"lucide-react\";\n\nimport { getGeneratedAlerts, getRecommendedCrop } from \"@/lib/actions\";\nimport type { RecommendCropOutput } from \"@/ai/flows/recommend-crop-flow\";\nimport { AlertCard, type Alert } from \"@/components/alert-card\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function AlertsPage() {\n  const [alerts, setAlerts] = useState<Alert[]>([]);\n  const [loading, setLoading] = useState(true);\n  const { toast } = useToast();\n\n  // Filter states\n  const [statusFilter, setStatusFilter] = useState('Active');\n  const [severityFilter, setSeverityFilter] = useState('All');\n\n  const fetchAlerts = useCallback(async () => {\n    const storedAddress = localStorage.getItem('farm_address');\n    if (!storedAddress) {\n      setLoading(false);\n      return;\n    }\n    const address = JSON.parse(storedAddress);\n    const { city, state } = address;\n\n    if (!city || !state) {\n      setLoading(false);\n      return;\n    }\n\n    let farmContext: RecommendCropOutput | null = null;\n    const cropResponse = await getRecommendedCrop({ city, state });\n\n    if (cropResponse.data) {\n      farmContext = cropResponse.data;\n      localStorage.setItem('lastValidCropRecommendation', JSON.stringify(cropResponse.data));\n    } else {\n      const cachedCropRaw = localStorage.getItem('lastValidCropRecommendation');\n      if (cachedCropRaw) {\n        farmContext = JSON.parse(cachedCropRaw);\n      } else {\n        setLoading(false);\n        return; // No live data, no cache, can't generate alerts.\n      }\n    }\n\n    const { cropName, predictedFarmType } = farmContext;\n\n    const alertsResponse = await getGeneratedAlerts({ city, state, cropName, farmType: predictedFarmType });\n\n    let latestAlerts: Alert[] = [];\n\n    if (alertsResponse.data) {\n      latestAlerts = alertsResponse.data.alerts;\n      localStorage.setItem('lastValidGeneratedAlerts', JSON.stringify(alertsResponse.data));\n    } else {\n        const cachedAlertsRaw = localStorage.getItem('lastValidGeneratedAlerts');\n        if (cachedAlertsRaw) {\n            const cachedData = JSON.parse(cachedAlertsRaw);\n            latestAlerts = cachedData.alerts;\n        }\n    }\n\n    if (latestAlerts.length > 0) {\n        setAlerts(latestAlerts);\n    }\n    \n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    const initialFetch = async () => {\n      setLoading(true);\n      await fetchAlerts();\n    }\n    initialFetch();\n    \n    // Auto-refresh every 30 seconds\n    const interval = setInterval(fetchAlerts, 30000);\n    return () => clearInterval(interval);\n  }, [fetchAlerts]);\n\n  const handleResolve = (alertId: string) => {\n    setAlerts(currentAlerts =>\n      currentAlerts.map(alert =>\n        alert.id === alertId ? { ...alert, status: 'Resolved' } : alert\n      )\n    );\n  };\n\n  const filteredAlerts = useMemo(() => {\n    return alerts\n      .filter(alert => {\n        if (statusFilter !== 'All' && alert.status !== statusFilter) return false;\n        if (severityFilter !== 'All' && alert.severity !== severityFilter) return false;\n        return true;\n      })\n      .sort((a, b) => {\n        const severityOrder = { Critical: 0, Warning: 1, Info: 2 };\n        if (a.status === 'Active' && b.status !== 'Active') return -1;\n        if (a.status !== 'Active' && b.status === 'Active') return 1;\n        return severityOrder[a.severity] - severityOrder[b.severity];\n      });\n  }, [alerts, statusFilter, severityFilter]);\n\n  const renderLoadingSkeleton = () => (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {Array.from({ length: 6 }).map((_, index) => (\n        <Card key={index}><CardContent className=\"p-6\"><Skeleton className=\"h-48\" /></CardContent></Card>\n      ))}\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-3xl font-bold tracking-tight font-headline flex items-center gap-2\">\n            <AlertTriangle className=\"h-8 w-8 text-primary\" />\n            System Alerts\n        </h1>\n        <p className=\"text-muted-foreground\">\n          Live feed of system notifications, generated based on your farm's context.\n        </p>\n      </div>\n\n      <Card>\n        <CardContent className=\"p-4 flex flex-wrap items-center gap-4\">\n            <div className=\"flex items-center gap-2 font-medium\">\n                <Filter className=\"h-4 w-4\" />\n                <span>Filter by:</span>\n            </div>\n            <div className=\"grid grid-cols-2 sm:grid-cols-2 gap-4 flex-1\">\n                <Select value={statusFilter} onValueChange={setStatusFilter}>\n                    <SelectTrigger className=\"w-full\">\n                        <SelectValue placeholder=\"Status\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                        <SelectItem value=\"All\">All Statuses</SelectItem>\n                        <SelectItem value=\"Active\">Active</SelectItem>\n                        <SelectItem value=\"Resolved\">Resolved</SelectItem>\n                    </SelectContent>\n                </Select>\n                 <Select value={severityFilter} onValueChange={setSeverityFilter}>\n                    <SelectTrigger className=\"w-full\">\n                        <SelectValue placeholder=\"Severity\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                        <SelectItem value=\"All\">All Severities</SelectItem>\n                        <SelectItem value=\"Critical\">Critical</SelectItem>\n                        <SelectItem value=\"Warning\">Warning</SelectItem>\n                        <SelectItem value=\"Info\">Info</SelectItem>\n                    </SelectContent>\n                </Select>\n            </div>\n        </CardContent>\n      </Card>\n      \n      {loading ? (\n        renderLoadingSkeleton()\n      ) : (\n        <motion.div layout className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <AnimatePresence>\n                {filteredAlerts.length > 0 ? (\n                    filteredAlerts.map(alert => (\n                        <motion.div\n                            key={alert.id}\n                            layout\n                            initial={{ opacity: 0, y: 20, scale: 0.95 }}\n                            animate={{ opacity: 1, y: 0, scale: 1 }}\n                            exit={{ opacity: 0, scale: 0.95, transition: { duration: 0.2 } }}\n                        >\n                            <AlertCard alert={alert} onResolve={handleResolve} />\n                        </motion.div>\n                    ))\n                ) : (\n                    <motion.div className=\"col-span-full text-center py-12 text-muted-foreground\">\n                        <p>No alerts to display.</p>\n                    </motion.div>\n                )}\n            </AnimatePresence>\n        </motion.div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}